{"version":3,"file":"index.es.js","sources":["../libs/paystack-actions.ts","../libs/use-paystack.ts","../libs/paystack-button.tsx","../libs/paystack-context.ts","../libs/paystack-provider.tsx","../libs/paystack-consumer.tsx"],"sourcesContent":["import PaystackPop from '@paystack/inline-js';\n\nexport const callPaystackPop = (paystackArgs: Record<string, any>): void => {\n  const paystack = new PaystackPop();\n  paystack.newTransaction(paystackArgs);\n};\n","import {HookConfig, InitializePayment} from './types';\nimport {callPaystackPop} from './paystack-actions';\n\nexport default function usePaystackPayment(hookConfig: HookConfig): InitializePayment {\n  function initializePayment({config, onSuccess, onClose}: Parameters<InitializePayment>[0]): void {\n    const args = {...hookConfig, ...config};\n\n    const {\n      publicKey,\n      firstname,\n      lastname,\n      phone,\n      email,\n      amount,\n      reference,\n      metadata = {},\n      currency = 'NGN',\n      channels,\n      label = '',\n      plan = '',\n      quantity = '',\n      subaccount = '',\n      transaction_charge = 0,\n      bearer = 'account',\n      split,\n      split_code,\n      connect_account,\n      connect_split,\n    } = args;\n    const paystackArgs: Record<string, any> = {\n      onSuccess: onSuccess ? onSuccess : () => null,\n      onCancel: onClose ? onClose : () => null,\n      key: publicKey,\n      ref: reference,\n      email,\n      firstname,\n      lastname,\n      amount,\n      currency,\n      plan,\n      subaccount,\n      transaction_charge,\n      bearer,\n      label,\n      metadata,\n    };\n\n    if (phone) {\n      paystackArgs.phone = phone;\n    }\n\n    if (quantity) {\n      paystackArgs.quantity = quantity;\n    }\n\n    if (channels) {\n      paystackArgs.channels = channels;\n    }\n\n    if (split) {\n      paystackArgs.split = split;\n    }\n\n    if (split_code) {\n      paystackArgs.split_code = split_code;\n    }\n\n    if (connect_split) {\n      paystackArgs.connect_split = connect_split;\n    }\n\n    if (connect_account) {\n      paystackArgs.connect_account = connect_account;\n    }\n\n    if (args['data-custom-button']) {\n      paystackArgs['data-custom-button'] = args['data-custom-button'];\n    }\n\n    callPaystackPop(paystackArgs);\n  }\n\n  return initializePayment;\n}\n","import React, {ReactNode} from 'react';\nimport usePaystackPayment from './use-paystack';\nimport {callback, PaystackProps} from './types';\n\ninterface PaystackButtonProps extends PaystackProps {\n  text?: string;\n  className?: string;\n  children?: ReactNode;\n  onSuccess?: callback;\n  onClose?: callback;\n}\n\nconst PaystackButton = ({\n  text,\n  className,\n  children,\n  onSuccess,\n  onClose,\n  ...config\n}: PaystackButtonProps): JSX.Element => {\n  const initializePayment = usePaystackPayment(config);\n\n  return (\n    <button\n      className={className}\n      onClick={(): void => initializePayment({config, onSuccess, onClose})}\n    >\n      {text || children}\n    </button>\n  );\n};\n\nexport default PaystackButton;\n","import {createContext} from 'react';\nimport {InitializePayment, PaystackProps} from './types';\n\ntype IPaystackContext = {\n  config: PaystackProps;\n  initializePayment: InitializePayment;\n  onSuccess: () => void;\n  onClose: () => void;\n};\n\nconst PaystackContext = createContext<IPaystackContext>({\n  config: {} as PaystackProps,\n  initializePayment: () => null,\n  onSuccess: () => null,\n  onClose: () => null,\n});\n\nexport default PaystackContext;\n","import React from 'react';\nimport PaystackContext from './paystack-context';\nimport usePaystackPayment from './use-paystack';\nimport {callback, PaystackProps} from './types';\n\ninterface PaystackProviderProps extends PaystackProps {\n  children: JSX.Element;\n  onSuccess: callback;\n  onClose: callback;\n}\n\nconst PaystackProvider = ({\n  children,\n  onSuccess,\n  onClose,\n  ...config\n}: PaystackProviderProps): JSX.Element => {\n  const initializePayment = usePaystackPayment(config);\n\n  return (\n    <PaystackContext.Provider value={{config, initializePayment, onSuccess, onClose}}>\n      {children}\n    </PaystackContext.Provider>\n  );\n};\n\nexport default PaystackProvider;\n","import React, {forwardRef, useContext, FunctionComponentElement} from 'react';\nimport PaystackProvider from './paystack-provider';\nimport {PaystackProps} from './types';\nimport PaystackContext from './paystack-context';\n\ninterface PaystackConsumerProps extends PaystackProps {\n  children: (arg: Record<string, any>) => any;\n  onSuccess?: () => void;\n  onClose?: () => void;\n}\n\nconst PaystackConsumerChild = ({\n  children,\n  ref,\n}: {\n  children: any;\n  ref: any;\n}): FunctionComponentElement<any> => {\n  const {config, initializePayment, onSuccess, onClose} = useContext(PaystackContext);\n\n  const completeInitializePayment = (): void => initializePayment({config, onSuccess, onClose});\n  return children({initializePayment: completeInitializePayment, ref});\n};\n\n// eslint-disable-next-line react/display-name\nconst PaystackConsumer = forwardRef(\n  (\n    {children, onSuccess: paraSuccess, onClose: paraClose, ...others}: PaystackConsumerProps,\n    ref: any,\n  ): JSX.Element => {\n    const onSuccess = paraSuccess ? paraSuccess : (): any => null;\n    const onClose = paraClose ? paraClose : (): any => null;\n    return (\n      <PaystackProvider {...others} onSuccess={onSuccess} onClose={onClose}>\n        <PaystackConsumerChild ref={ref}>{children}</PaystackConsumerChild>\n      </PaystackProvider>\n    );\n  },\n);\n\nexport default PaystackConsumer;\n"],"names":[],"mappings":"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"}